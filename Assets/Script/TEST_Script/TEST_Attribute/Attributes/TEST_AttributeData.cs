using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// 데이터는 어떤 정보를 담나.
// 이게 있다는것만 알려준다.
// 실행자는 다르다.
// 이 데이터를 가진다는것으로 실행까지는 이뤄지지 않을것, 왜냐, 이건 그냥 전달하는 데이터일 뿐.
// 실행자가 이 데이터를 받고 실행하고 말고를 결정한다.

// 단순한 목적이다
/*

객체화된 동작이 여러가지 있다.

이 동작의 대상은 엔티티, UI 된다.

/////////// 그냥 하면 어떻게 되나.. /////////////

플레이어 동작에도 만들고
몬스터에게도 만들고.
UI에게도 만들고
그렇게 해야한다.

그렇다면. 
플레이어 동작에 끼워넣고 //PlayerAction 
몬스터 동작에 끼워넣는다면. 해결되지 않을까?

ㅇㅋ.. 글로벌 동작을 만들면 되겠는걸.
근데 ONdie 같은경우 글로벌 동작을 만들면 안되는 이유가 있나?
안될것이야 없을것 같은데..

이 동작이 누가 소유하고 있는지 명시적으로 작성하고 싶을때. 해야될듯 하다.
반면에 지금 이 동작은 너무나도 많아서 가독력의 감소가 일어날것 같다
////////// 그렇다면 가독성이 떨어지면 굳이 분리할 필요가 없는게 맞나? ///////////

역시 되는걸 해야겠지..

이걸 맞으면 결빙된다.
*/

public class TEST_AttributeData : MonoBehaviour {

}